
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> baseDir<-"/user/arao/home/meddle_data/"
> scriptsDir<-paste(baseDir, "/analysis-scripts/", sep="");
> setwd(scriptsDir);
> broAggDir<-paste(baseDir,"/bro-aggregate-data/", sep="");
> miscDataDir<-paste(baseDir, "/miscData/", sep="")
> resultsDir<-paste(baseDir, "paperData/", sep="");
> 
> source (paste(scriptsDir, "/readLogFiles.R", sep=""))
> 
> getActiveUserIDs <- function() {
+   unique(connData$user_id)
+ }
> 
> getDeviceSummary <- function() {   
+   activeUserInfo$count <- 1
+   deviceCounts <- aggregate(activeUserInfo[c("count")], 
+                         by=list(device_type =activeUserInfo$device_type,
+                                 operating_system_name=activeUserInfo$operating_system_name),
+                         FUN=length)
+   print(paste("Total of active devices", sum(deviceCounts$count)))
+   print("Description of Devices");
+   print(deviceCounts)
+ }
> 
> #annotateLocalTime <- function() {
> #  # Convert the time stamps to date time
> #  # For each user group by the day, hour, on which at least one packet was seen
> #
> #  # This takes too much time 
> #  #connData$ts_date <- mapply(x=as.numeric(connData$ts), y=connData$time_zone, function(x,y) {z<-as.POSIXlt(x, tz=y, origin = "1970-01-01"); z})
> #  
> #  unique_tz <- unique(connData$time_zone)
> #  i<-1
> #  connData$ts_date <- as.POSIXlt(0, tz="America/Los_Angeles", origin = "1970-01-01")
> #  for(i in 1:length(unique_tz)) {    
> #    tz_rows <- grep(unique_tz[i], connData$time_zone)
> #    print(paste(unique_tz[i], length(tz_rows)))
> #    connData[tz_rows, ]$ts_date <- as.POSIXlt(connData[tz_rows, ]$ts, tz=unique_tz[i], origin = "1970-01-01");
> #  }
> #  connData
> #}
>   
> getUsageStats <- function() {    
+   activeUserIds<- getActiveUserIDs()
+   connData$count <- 1;
+  #connData$hour <- connData$ts_date$hour
+   #connData$year <- connData$ts_date$year
+   print("Appended year, hour, and day")
+   # Filter days after November 1  
+   usageStats <- aggregate(connData[c("count")], 
+                           by=list(user_id=connData$user_id, year=connData$year, 
+                                   yday=connData$yday, hour=connData$hour),
+                           FUN=length)
+   hoursPerDay <- aggregate(usageStats[c("hour")],
+                            by=list(user_id=usageStats$user_id, year=usageStats$year,
+                                    yday=usageStats$yday),
+                            FUN=length)
+   usersWithAllHours <- unique(hoursPerDay[hoursPerDay$hour==24,]$user_id)
+   print(paste(length(usersWithAllHours), "of", length(activeUserIds), "have been monitored for at least one 24 hour cycle"))
+   print("Summary stats for hours per day")
+   print(summary(hoursPerDay$hour))
+   rm(hoursPerDay)
+   rm(usersWithAllHours)
+   # now get the number of days for each user.
+   daysPerUser <- aggregate(connData[c("count")],
+                            by=list(user_id=connData$user_id, 
+                                    year=connData$year, yday=connData$yday),
+                            FUN=length)
+   daysPerUser <- aggregate(daysPerUser[c("yday")],
+                            by=list(user_id=daysPerUser$user_id),
+                            FUN=length)
+   print("Summary of days per user")
+   print(summary(daysPerUser$yday))
+   rm(daysPerUser)
+   usageDays <- aggregate(connData[c("count")],
+                          by=list(year=connData$year, yday=connData$yday),
+                          FUN=length)
+   usageDays <- aggregate(connData[c("count")],
+                          by=list(year=connData$year, yday=connData$yday),
+                          FUN=length)  
+   print(paste("Total number of days in which we observed at least one packet: ", nrow(usageDays)))
+   print("Statistics on the number of flows handled per day (across all users)")
+   print(summary(usageDays$count))
+   rm(usageDays)
+   # Now dumping the isp stats  
+   ispStats <- aggregate(connData[c("count")],
+                         by=list(user_id=connData$user_id, 
+                                 isp_id=connData$isp_id,
+                                 technology=connData$technology),                                  
+                         FUN=length)
+   cellStats <- ispStats[ispStats$technology=="c", ]
+   cellStats <- aggregate(cellStats[c("isp_id")],
+                          by=list(user_id=cellStats$user_id),
+                          FUN=length)
+   print("Summary of number of cellular ISPs from each user")
+   print(summary(cellStats$isp_id))
+   rm(cellStats)
+   wifiStats <- ispStats[ispStats$technology=="w", ]
+   wifiStats <- aggregate(wifiStats[c("isp_id")],
+                          by=list(user_id=wifiStats$user_id),
+                          FUN=length)
+   print("Summary of number of wifi ISPs from each user")  
+   print(summary(wifiStats$isp_id))
+   rm(wifiStats)
+   print(paste("Number of unique ISPs:", length(unique(connData$isp_id))))
+   print(paste("Number of unique Wifi ISPs:", length(unique(connData[(connData$technology=="w"), ]$isp_id))))
+ }
> 
> fName <- paste(broAggDir, "/conn.log.info", sep="")
> connData <- readConnData(fName)
[1] "Reading file name /user/arao/home/meddle_data//bro-aggregate-data//conn.log.info"
[1] "Done"
Warning messages:
1: In convertStringColsToDouble(connData$orig_ip_bytes) :
  NAs introduced by coercion
2: In convertStringColsToDouble(connData$resp_ip_bytes) :
  NAs introduced by coercion
3: In convertStringColsToDouble(connData$orig_pkts) :
  NAs introduced by coercion
4: In convertStringColsToDouble(connData$resp_pkts) :
  NAs introduced by coercion
5: In convertStringColsToDouble(connData$duration) :
  NAs introduced by coercion
6: In convertStringColsToDouble(connData$ack_time) :
  NAs introduced by coercion
7: In convertStringColsToDouble(connData$synack_time) :
  NAs introduced by coercion
> connData$yday <- (connData$mon*100)+(connData$day); # the hundreds represent the month and tens the days
> #connData<- connData[connData$ts > 1351727700, ]
> fName <- paste(miscDataDir, "/userInfo.txt", sep="");
> userInfo <- readTable(fName)
[1] "Reading file name /user/arao/home/meddle_data//miscData//userInfo.txt"
[1] "Done"
> userInfo <- userInfo[!duplicated(userInfo$user_id),]
> activeUserIds <- getActiveUserIDs()
> #activeUserInfo <- userInfo;
> activeUserInfo <- userInfo[userInfo$user_id %in% activeUserIds, ]
> print (activeUserInfo)
   user_id       user_name operating_system_name device_type
1        1     dave-iphone                   iOS         phn
2        2       dave-ipad                   iOS         tab
3        3       will-ipad                   iOS         tab
4        4      dave-droid               Android         phn
5        5       arao-ipod                   iOS         tab
6        6      arao-droid               Android         phn
7        7   arvind-iphone                   iOS         phn
8        8   arnaud-iphone                   iOS         phn
10      10 parikshan-droid               Android         tab
11      11      will-droid               Android         phn
12      12      5a1cd42eff                   iOS         phn
13      13      05c2c53df8               Android         phn
15      15      38b8bc378a                   iOS         phn
16      16      1bb03d7910               Android         phn
18      18      e007dba768                   iOS         phn
19      19      f67a6dc4b5                   iOS         tab
24      24     uw101-droid               Android         phn
25      25      d2628b24f6                   iOS         phn
27      27      dcce6372e4               Android         phn
28      28      4187a11259               Android         phn
29      29      cf6ba20782               Android         phn
30      30      516de0e1bd                   iOS         tab
31      31      331767035e                   iOS         phn
32      32        shen-ios                   iOS         phn
35      35 dave-iphone-3gs                   iOS         phn
> getDeviceSummary()
[1] "Total of active devices 25"
[1] "Description of Devices"
  device_type operating_system_name count
1         phn               Android     9
2         tab               Android     1
3         phn                   iOS    10
4         tab                   iOS     5
> #connData<-annotateLocalTime()
> getUsageStats()
[1] "Appended year, hour, and day"
[1] "22 of 25 have been monitored for at least one 24 hour cycle"
[1] "Summary stats for hours per day"
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   1.00   15.00   24.00   19.04   24.00   24.00 
[1] "Summary of days per user"
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   5.00   15.00   34.00   57.56   58.00  199.00 
[1] "Total number of days in which we observed at least one packet:  202"
[1] "Statistics on the number of flows handled per day (across all users)"
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
     10   12400   20280   21350   27150   77320 
[1] "Summary of number of cellular ISPs from each user"
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  1.000   1.000   1.000   1.333   2.000   3.000 
[1] "Summary of number of wifi ISPs from each user"
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   1.00    2.00    4.00    4.52    4.00   25.00 
[1] "Number of unique ISPs: 53"
[1] "Number of unique Wifi ISPs: 43"
> 

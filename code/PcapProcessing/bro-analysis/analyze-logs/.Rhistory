FUN=length);
sumBytesPerHour$ndevices <- nDevices$duration
sumBytesPerHour$normBytesPerHour <- sumBytesPerHour$BytesPerHour/sumBytesPerHour$ndevices
sumBytesPerHour$normFlowsPerHour <- sumBytesPerHour$FlowsPerHour/sumBytesPerHour$ndevices
viewData(sumBytesPerHour)
baseDir<-"/Users/ashwin/proj-work/meddle/meddle-data/"
scriptsDir<-"/Users/ashwin/proj-work/meddle/ashwin-meddle/meddle/code/PcapProcessing/bro-analysis/analyze-logs/"
setwd(scriptsDir);
broLogsDir<-paste(baseDir, "bro-results/", sep="");
broAggDir<-paste(baseDir,"bro-aggregate-data/", sep="");
adBytesFile <- paste(broAggDir, "adBytes.txt", sep="");
plotsDir=paste(baseDir, "plots/", sep="");
adData <- read.table(paste(broAggDir, "adDomain.txt", sep=""), header=T, sep="\t", fill=TRUE, stringsAsFactors=FALSE, quote=""); # Note FILL causes silent padding
opar = par();
newpar = par(cex.lab=1.25, cex.axis=1.25, cex.main=1.25, cex.sub=1.25, cex=1.25, xaxs="i", yaxs="i",lwd=3);
convertStringColsToDouble <- function (stringCol) {
stringCol <- as.double(stringCol)
stringCol[is.na(stringCol)] <-0;
stringCol;
}
fName <- paste(broAggDir, "/conn.log.ann", sep="");
connData <- read.table(fName, header=T, sep="\t", fill=TRUE, stringsAsFactors=FALSE, quote="");
connData$orig_ip_bytes = convertStringColsToDouble(connData$orig_ip_bytes);
connData$resp_ip_bytes = convertStringColsToDouble(connData$resp_ip_bytes);
connData$orig_pkts = convertStringColsToDouble(connData$orig_pkts);
connData$resp_pkts = convertStringColsToDouble(connData$resp_pkts);
connData$duration <- convertStringColsToDouble(connData$duration);
startTime <- as.numeric(as.POSIXlt("2012-11-01",tz="America/Los_Angeles", epoch="1970-01-01"))
stopTime <- as.numeric(as.POSIXlt("2012-12-01",tz="America/Los_Angeles", epoch="1970-01-01"))
connData <- connData[connData$ts >=startTime, ];
connData <- connData[connData$ts <= stopTime, ];
connData$tot_bytes <- connData$orig_ip_bytes + connData$resp_ip_bytes;
connData$ts_date <- as.POSIXlt(as.numeric(connData$ts), tz="America/Los_Angeles", origin = "1970-01-01")
connData$hour <- connData$ts_date$hour;
connData$yday <- connData$ts_date$yday
aggrUser <- aggregate(connData[c("tot_bytes", "resp_ip_bytes", "orig_ip_bytes", "duration")],
by=list(user_id=connData$user_id, oper_sys=connData$oper_sys, yday=connData$yday, hour=connData$hour),
FUN=sum)
tmpFlows <- aggregate(connData[c("tot_bytes")], #dummy variable for length
by=list(user_id=connData$user_id, oper_sys=connData$oper_sys, yday=connData$yday, hour=connData$hour),
FUN=length)
aggrUser$num_flows <- tmpFlows$tot_bytes
nHours <- aggregate(aggrUser[c("hour")], by=list(user_id=aggrUser$user_id), FUN=length);
#nBytes <- aggregate(aggrUser[c("tot_bytes")], by=list(user_id=aggrUser$user_id), FUN=sum);
aggrData <- aggregate(aggrUser[c("tot_bytes", "resp_ip_bytes", "orig_ip_bytes", "duration", "num_flows")],
by=list(user_id=aggrUser$user_id, oper_sys=aggrUser$oper_sys),
FUN=sum)
aggrData$nhours <- nHours$hour;
#aggrData$nBytes <- nBytes$tot_bytes;
aggrData$BytesPerHour <- aggrData$tot_bytes/aggrData$nhours;
aggrData$FlowsPerHour <- aggrData$num_flows/aggrData$nhours;
aggrData <- aggrData[(aggrData$tot_bytes>(100*10^6)),];
sumBytesPerHour <- aggregate(aggrData[c("BytesPerHour", "FlowsPerHour")],
by=list(oper_sys=aggrData$oper_sys),
FUN=sum);
nDevices <- aggregate(aggrData[c("duration")], #dummy variable for length
by=list(oper_sys=aggrData$oper_sys),
FUN=length);
sumBytesPerHour$ndevices <- nDevices$duration
sumBytesPerHour$normBytesPerHour <- sumBytesPerHour$BytesPerHour/sumBytesPerHour$ndevices
sumBytesPerHour$normFlowsPerHour <- sumBytesPerHour$FlowsPerHour/sumBytesPerHour$ndevices
viewData(aggrData)
viewData(aggrData)
viewData(sumBytesPerHour)
viewData(aggrData)
getAdTrafficData <- function (userLogsDir) {
userName <- basename(userLogsDir);
print("Reading conn")
fName <- paste(userLogsDir, "/conn.log.ann", sep="");
print("Read Conn")
connData <- read.table(fName, header=T, sep="\t", fill=TRUE, stringsAsFactors=FALSE, quote=""); # Note FILL causes silent padding
#connData <- connData[order(connData$ts),];
connData$orig_ip_bytes = convertStringColsToDouble(connData$orig_ip_bytes);
connData$resp_ip_bytes = convertStringColsToDouble(connData$resp_ip_bytes);
connData$orig_pkts = convertStringColsToDouble(connData$orig_pkts);
connData$resp_pkts = convertStringColsToDouble(connData$resp_pkts);
connData$totBytes = connData$orig_ip_bytes + connData$resp_ip_bytes;
fName <- paste(userLogsDir, "/adsTable.txt", sep="");
print ("Read ads")
adData <- read.table(fName, header=F, sep="\t", fill=TRUE, stringsAsFactors=FALSE); # Note FILL causes silent padding
adCumul <- read.table
adData <- aggregate(adData[c("V3", "V5", "V11", "V12")],
by=list(V2=adData$V2),
FUN=max); # Take the median of the bytes (HACK)
#aggrTechCumulBytes <- aggregate(connData[c("orig_ip_bytes", "resp_ip_bytes")],
#                            by=list(user_id=connData$user_id, technology=connData$technology),
#                            FUN=sum);
#aggrTechCumulBytes$totBytes <- aggrTechCumulBytes$orig_ip_bytes + aggrTechCumulBytes$resp_ip_bytes
# we now have the total bytes per technology for the user
aggrAdBytes <- aggregate(adData[c("V11", "V12")],
by=list(V3=adData$V3, V5=adData$V5),
FUN=sum);
aggrAdBytes$totBytes <- as.numeric(aggrAdBytes$V11)+as.numeric(aggrAdBytes$V12)
x<- c(userName, sum(connData$totBytes),
sum(connData[connData$technology=="Cellular",]$orig_ip_bytes),
sum(connData[connData$technology=="Cellular",]$resp_ip_bytes),
sum(connData[connData$technology=="Cellular",]$totBytes),
sum(connData[connData$technology!="Cellular",]$orig_ip_bytes),
sum(connData[connData$technology!="Cellular",]$resp_ip_bytes),
sum(connData[connData$technology!="Cellular",]$totBytes),
sum(aggrAdBytes$totBytes),
sum(aggrAdBytes[aggrAdBytes$V5=="Cellular",]$V11),
sum(aggrAdBytes[aggrAdBytes$V5=="Cellular",]$V12),
sum(aggrAdBytes[aggrAdBytes$V5=="Cellular",]$totBytes),
sum(aggrAdBytes[aggrAdBytes$V5!="Cellular",]$V11),
sum(aggrAdBytes[aggrAdBytes$V5!="Cellular",]$V12),
sum(aggrAdBytes[aggrAdBytes$V5!="Cellular",]$totBytes));
x;
}
plotAdMatrix <- matrix(nrow=1000, ncol=15)
i<-1
for (userLogsDir in list.dirs(broLogsDir, recursive=FALSE)) {
print(userLogsDir)
plotAdMatrix[i,] <- getAdTrafficData(userLogsDir)
i<-i+1;
}
plotAdMatrix<-plotAdMatrix[1:i-1,]
filtAdMatrix <- plotAdMatrix[as.numeric(plotAdMatrix[,2])>(100*10^6), ];
filtAdMatrix
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+",
ylim=c(0,4),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "N/A"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=3.5,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=7, y=3, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+",
ylim=c(0,5),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
plotAdMatrix <- matrix(nrow=1000, ncol=15)
i<-1
for (userLogsDir in list.dirs(broLogsDir, recursive=FALSE)) {
print(userLogsDir)
plotAdMatrix[i,] <- getAdTrafficData(userLogsDir)
i<-i+1;
}
plotAdMatrix<-plotAdMatrix[1:i-1,]
filtAdMatrix <- plotAdMatrix[as.numeric(plotAdMatrix[,2])>(100*10^6), ];
plotAdMatrix
filtAdMatrix <- plotAdMatrix[as.numeric(plotAdMatrix[,2])>(100*10^6), ];
filtAdMatrix
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+",
ylim=c(0,10),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "N/A"
textVectors <- paste("(", textVectors,")", sep="")
userLogsDir
filtAdMatrix
plotAdMatrix <- matrix(nrow=1000, ncol=15)
i<-1
for (userLogsDir in list.dirs(broLogsDir, recursive=FALSE)) {
print(userLogsDir)
plotAdMatrix[i,] <- getAdTrafficData(userLogsDir)
i<-i+1;
}
plotAdMatrix<-plotAdMatrix[1:i-1,]
filtAdMatrix <- plotAdMatrix[as.numeric(plotAdMatrix[,2])>(100*10^6), ];
#pdf(paste(plotsDir,"/ad"))
par(newpar)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+",
ylim=c(0,10),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "N/A"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=3.5,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=7, y=3, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+",
ylim=c(0,10),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "N/A"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=3.5,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+",
ylim=c(0,10),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "N/A"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=8,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=7, y=5, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
plotAdMatrix<-plotAdMatrix[1:i-1,]
#filtAdMatrix <- plotAdMatrix[as.numeric(plotAdMatrix[,2])>(100*10^6), ];
filtAdMatrix <- plotAdMatrix;
#pdf(paste(plotsDir,"/ad"))
par(newpar)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+",
ylim=c(0,10),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "N/A"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=8,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=7, y=5, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
plotAdMatrix<-plotAdMatrix[1:i-1,]
plotAdMatrix<plotAdMatrix[order(plotAdMatrix[,2], descending=TRUE),]
plotAdMatrix<-plotAdMatrix[order(plotAdMatrix[,2], descending=TRUE),]
plotAdMatrix <- matrix(nrow=1000, ncol=15)
i<-1
for (userLogsDir in list.dirs(broLogsDir, recursive=FALSE)) {
print(userLogsDir)
plotAdMatrix[i,] <- getAdTrafficData(userLogsDir)
i<-i+1;
}
plotAdMatrix<-plotAdMatrix[1:i-1,]
plotAdMatrix<-plotAdMatrix[order(plotAdMatrix[,2], descending=TRUE),]
filtAdMatrix <- plotAdMatrix;
#pdf(paste(plotsDir,"/ad"))
par(newpar)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+",
ylim=c(0,10),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "N/A"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=8,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=7, y=5, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
filtAdMatrix
plotAdMatrix<-plotAdMatrix[order(plotAdMatrix[,2], descending=TRUE),]
??sort
?sort.list
?? matrix sort
plotAdMatrix<-plotAdMatrix[order(plotAdMatrix[,2]),]
plotAdMatrix<-plotAdMatrix[order(plotAdMatrix[,2], decreasing=TRUE),]
filtAdMatrix <- plotAdMatrix[as.numeric(plotAdMatrix[,2])>(100*10^6), ];
par(newpar)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+",
ylim=c(0,10),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "N/A"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=8,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=7, y=5, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
viewData(aggrData)
filtAdMatrix
plotAdMatrix<-plotAdMatrix[1:i-1,]
plotAdMatrix[,2] <- as.numeric(plotAdMatrix[,2])
plotAdMatrix[,9] <- as.numeric(plotAdMatrix[,9])
plotAdMatrix[,12] <- as.numeric(plotAdMatrix[,12])
plotAdMatrix[,15] <- as.numeric(plotAdMatrix[,15])
plotAdMatrix[,5] <- as.numeric(plotAdMatrix[,5])
plotAdMatrix[,8] <- as.numeric(plotAdMatrix[,8])
plotAdMatrix<-plotAdMatrix[order(plotAdMatrix[,2], decreasing=TRUE),]
filtAdMatrix <- plotAdMatrix[as.numeric(plotAdMatrix[,2])>(100*10^6), ];
filtAdMatrix
plotAdMatrix<-plotAdMatrix[1:i-1,]
plotAdMatrix[,2] <- as.numeric(plotAdMatrix[,2])
plotAdMatrix[,9] <- as.numeric(plotAdMatrix[,9])
plotAdMatrix[,12] <- as.numeric(plotAdMatrix[,12])
plotAdMatrix[,15] <- as.numeric(plotAdMatrix[,15])
plotAdMatrix[,5] <- as.numeric(plotAdMatrix[,5])
plotAdMatrix[,8] <- as.numeric(plotAdMatrix[,8])
plotAdMatrix<-plotAdMatrix[order(as.numeric(plotAdMatrix[,2]), decreasing=TRUE),]
filtAdMatrix <- plotAdMatrix[as.numeric(plotAdMatrix[,2])>(100*10^6), ];
filtAdMatrix
plotAdMatrix<-plotAdMatrix[order(as.numeric(plotAdMatrix[,2]), decreasing=TRUE),]
filtAdMatrix <- plotAdMatrix[as.numeric(plotAdMatrix[,2])>(100*10^6), ];
#filtAdMatrix <- plotAdMatrix;
#pdf(paste(plotsDir,"/ad"))
par(newpar)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+",
ylim=c(0,10),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "-"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=8,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=7, y=5, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
plotAdMatrix<-plotAdMatrix[order(as.numeric(plotAdMatrix[,2]), decreasing=TRUE),]
filtAdMatrix <- plotAdMatrix[as.numeric(plotAdMatrix[,2])>(100*10^6), ];
#filtAdMatrix <- plotAdMatrix;
#pdf(paste(plotsDir,"/ad"))
par(newpar)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+",
ylim=c(0,4),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "-"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=8,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=1, y=3.5, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
plotAdMatrix<-plotAdMatrix[order(as.numeric(plotAdMatrix[,2]), decreasing=TRUE),]
filtAdMatrix <- plotAdMatrix[as.numeric(plotAdMatrix[,2])>(100*10^6), ];
#filtAdMatrix <- plotAdMatrix;
pdf(paste(plotsDir,"/userAdsShare.pdf", sep=""))
par(newpar)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+",
ylim=c(0,4),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "-"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=8,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=1, y=3.5, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
dev.off();
pdf(paste(plotsDir,"/userAdsShare.pdf", sep=""))
par(newpar)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+", xaxs="r", yaxs="r",
ylim=c(0,4),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "-"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=8,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=1, y=3.5, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
dev.off();
filtAdMatrix
9426890/482129106
100*9426890/482129106
10*9426890
pdf(paste(plotsDir,"/userAdsShare.pdf", sep=""))
par(newpar)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+", xaxs="r", yaxs="r",
ylim=c(0,3.5),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "-"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=8,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=1, y=3.0, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
dev.off();
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+", xaxs="r", yaxs="r",
ylim=c(0,3.5),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "-"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=3,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=1, y=1.5, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
dev.off();
pdf(paste(plotsDir,"/userAdsShare.pdf", sep=""))
par(newpar)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+", xaxs="r", yaxs="r",
ylim=c(0,4),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "-"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=3,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=1, y=1.5, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
dev.off();
pdf(paste(plotsDir,"/userAdsShare.pdf", sep=""))
par(newpar)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+", xaxs="r", yaxs="r",
ylim=c(0,4),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "-"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=3.5,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=1, y=1.5, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
dev.off();
pdf(paste(plotsDir,"/userAdsShare.pdf", sep=""))
par(newpar)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+", xaxs="r", yaxs="r",
ylim=c(0,4),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "-"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=3.8,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=1, y=1.5, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
dev.off();
plotAdMatrix<-plotAdMatrix[order(as.numeric(plotAdMatrix[,2]), decreasing=TRUE),]
plotAdMatrix<-plotAdMatrix[plotAdMatrix[,1]!="arnaud-iphone",]
filtAdMatrix <- plotAdMatrix[as.numeric(plotAdMatrix[,2])>(100*10^6), ];
#filtAdMatrix <- plotAdMatrix;
pdf(paste(plotsDir,"/userAdsShare.pdf", sep=""))
par(newpar)
plot(1:length(filtAdMatrix[,1]), 100*as.numeric(filtAdMatrix[,9])/as.numeric(filtAdMatrix[,2]),
pch="+", xaxs="r", yaxs="r",
ylim=c(0,4),
xlim=c(0, length(filtAdMatrix[,1])+1),
xlab="User (ordered by total traffic volume)",
ylab="Percentage of ad traffic");
points(100*as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,5]), pch="v")
textVectors <- (as.numeric(filtAdMatrix[,12])/as.numeric(filtAdMatrix[,15]))/(as.numeric(filtAdMatrix[,5])/as.numeric(filtAdMatrix[,8]))
textVectors <- round(100*textVectors)/100;
textVectors[is.na(textVectors)] <- "-"
textVectors <- paste("(", textVectors,")", sep="")
text(x=1:length(filtAdMatrix[,1]), y=3.8,
labels=textVectors, xpd=TRUE, srt=90)
grid(lwd=1)
legend(x=1, y=1.5, legend=c("Aggregate", "Cellular"), pch=c("+", "v"));
dev.off();
filtAdMatrix
8316531*467155820/7753561
